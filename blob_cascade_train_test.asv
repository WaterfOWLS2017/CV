%% Train buoys (example)
% This example shows you the steps involved in training a cascade object
% detector. It trains a 5-stage detector from a very small training set. In
% reality, an accurate detector requires many more stages and thousands of
% positive samples and negative images.
%% 
% Load the positive samples data from a .mat file. The file names and bounding boxes are contained in an array of structures named 'data'.

% Copyright 2015 The MathWorks, Inc.

load('buoyLabelingSession.mat');

%positiveInstances = positiveInstances(:,1:2);

%% load in the camera data
% load in the bumblebee2 data
% 
vid = videoinput('pointgrey', 1, 'F7_BayerBG8_640x480_Mode3');


%%
% Add the images location to the MATLAB path.

imDir = fullfile(matlabroot,'toolbox','vision','visiondata',...
    'buoyImages');
addpath(imDir);
%%
% Specify the folder for negative images.
negativeFolder = 'non_colored_buoys/'; %fullfile(matlabroot,'toolbox','vision','visiondata','nonStopSigns');
negativeImages = imageDatastore(negativeFolder);
%%
% Train a cascade object detector called 'buoyDetector.xml' using HOG features. The following command may take several minutes to run:
trainCascadeObjectDetector('buoyDetector.xml', positiveInstances, negativeFolder, 'FalseAlarmRate', 0.01, 'NumCascadeStages', 5);

%%
% Use the newly trained classifier to detect a buoy in an image.
detector = vision.CascadeObjectDetector('buoyDetector.xml'); 

image = getsnapshot(vid);

[m n] = size(image);
%imshow(image);

%%
%contents = dir('yellow_buoys');
%for i=4:21
while (1)   
    image = getsnapshot(vid);
    image = image(:,1:(n/6),:);
    imshow(image);
    % Read the test image.
    %image = imread(['yellow_buoys/' contents(i).name]);
  
    % Detect a stop sign.
    bbox = step(detector,image);
    [m,n] = size(bbox);
    detectedImg = image;
    pause;
    for i=1:m
       xCenter = (bbox(i,1)+ bbox(i,3)/2);
       yCenter = bbox(i,2);
       pixels = impixel(image, xCenter, yCenter);
       detectedImg = insertObjectAnnotation(detectedImg,'rectangle',bbox(i,:),['buoy' num2str(pixels)]);
       imshow(detectedImg);
       pause;
    end
    
    % Insert bounding boxes and return marked image.
    
    
    % Display the detected stop sign.
    %figure;
    %imshow(detectedImg);
    
    imshow(detectedImg);
    pause (1);
end

    
%%
% Remove the image directory from the path.
rmpath(imDir);
